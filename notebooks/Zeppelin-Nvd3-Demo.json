{"paragraphs":[{"title":"Check Versions","text":"%pyspark\n\ndef versionCheck():\n    import sys\n    print(\"Python: \" + sys.version.replace(\"\\n\", \" - \"))\n    print(\"Spark:  \" + sc.version)\n\ndef display(html, style=None):\n    print(\"%html\")\n    if isinstance(html, (tuple, list)):\n        html = \"\".join([\"\"\"<div style=\"display:inline; margin-left:%dpx\">%s</div>\"\"\" % (el[1], el[0]) for el in html])\n    if style is not None:\n        html = \"<%s>%s</%s>\" % (style, html, style)\n    print(html)\n\ndef getNoteId():\n    return z.z.getInterpreterContext().getNoteId()\n\ndef getParagraphId():\n    return z.z.getInterpreterContext().getParagraphId()\n\n\n# The variable z holds the zeppelinContext. It is essential for all Angular based interactions - so let's save it :-)\nZEPPELIN_CONTEXT = z.z\n\n# In case one overwrites z, z = recoverZeppelinContext() gets the context back\ndef recoverZeppelinContext():\n    return PyZeppelinContext(ZEPPELIN_CONTEXT)\n\nversionCheck()\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374568_1221000583","id":"20170312-173550_607126225","result":{"code":"SUCCESS","type":"TEXT","msg":"Python: 3.5.2 |Anaconda 4.3.0 (64-bit)| (default, Jul  2 2016, 17:53:06)  - [GCC 4.4.7 20120313 (Red Hat 4.4.7-1)]\nSpark:  1.6.2\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:441"},{"title":"Some helpers to create data","text":"%pyspark\n\nimport numpy as np\nimport pandas as pd\nimport random\nimport time\nfrom datetime import datetime\n\npd.options.display.width=200\n\ndef randomList(count, mean, dist):\n    return [ mean + (1 if random.random() > 0.5 else -1) * random.random() * dist for i in range(count)]\n\n\ndef randomNormalList(count, mean, stdev):\n    return np.random.normal(mean, stdev, count).tolist()\n\n\ndef randomWalk(count=20, factor=2, offset=10):\n    return np.abs(np.cumsum(np.random.uniform(-factor, factor, (count, 1)) ) + offset)\n\n\ndef lastDays(days, epoch=True, ms=True):\n    now = datetime.now()\n    t = int(time.mktime(now.timetuple())) - 3600 * 24 * days\n    if epoch:\n        factor = 1000 if ms else 1\n        return [int(t + i * 3600 * 24) * factor for i in range(days)]\n    else:\n        return [time.strftime('%Y-%m-%d', time.localtime(int(t + i*3600*24))) for i in range(days)]\n        ","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374568_1221000583","id":"20170313-121917_178507939","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:442"},{"title":"Stock data loader","text":"%pyspark\n\n#\n# pip install yahoo-finance\n#\n\nfrom yahoo_finance import Share     \n\ndef downloadHistoricalStockData(symbol, begin, end, fillMissing=True):\n    data = Share(symbol).get_historical(\"%04d-%02d-%02d\" % begin, \"%04d-%02d-%02d\" % end)\n    df = pd.DataFrame(data)\n\n    for col in \"Adj_Close\", \"Close\", \"High\", \"Low\", \"Open\":\n        df[col] = df[col].astype(float)\n    df[\"Volume\"] = df[\"Volume\"].astype(int)\n    df[\"Date\"] = pd.to_datetime(df[\"Date\"], infer_datetime_format=True)\n    \n    if fillMissing:\n        return fillMissingValues(df, symbol, begin, end)\n    else: \n        return df\n\ndef fillMissingValues(df, symbol, begin, end):\n    allDates = pd.DataFrame({\"Date\": pd.date_range(pd.datetime(*begin), pd.datetime(*end), freq='D')})\n    df2 = allDates.merge(df, how=\"outer\")\n    df2[\"Symbol\"] = symbol\n    df2 = df.fillna(0, axis=1)\n    df2[\"Timestamp\"] = (df[\"Date\"].astype(\"int64\") / 1000000).astype('int64')\n    return df2.sort_values(by=[\"Timestamp\"])\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374568_1221000583","id":"20170319-153940_1371606880","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:443"},{"title":"Iris data download ...","text":"%sh\ncd /tmp\nwget  https://raw.github.com/pydata/pandas/master/pandas/tests/data/iris.csv","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":true,"editorSetting":{"language":"sh","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/sh","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374568_1221000583","id":"20170316-172251_1574722917","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:444"},{"title":"... and as pandas  DataFrame","text":"%pyspark\n\nimport pandas as pd\niris = pd.read_csv('/tmp/iris.csv')\nprint(iris.head())","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374568_1221000583","id":"20170316-172339_752876435","result":{"code":"SUCCESS","type":"TEXT","msg":"   SepalLength  SepalWidth  PetalLength  PetalWidth         Name\n0          5.1         3.5          1.4         0.2  Iris-setosa\n1          4.9         3.0          1.4         0.2  Iris-setosa\n2          4.7         3.2          1.3         0.2  Iris-setosa\n3          4.6         3.1          1.5         0.2  Iris-setosa\n4          5.0         3.6          1.4         0.2  Iris-setosa\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:445"},{"text":"%md\n## 1 Preparation\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170313-160431_1894158266","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>1 Preparation</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:446"},{"title":"Initialize ZeppelinSession ...","text":"%pyspark\n\nfrom zeppelin_session import ZeppelinSession, resetZeppelinSession, LogLevel, Logger\n\nresetZeppelinSession(z.z)\n\nzs = ZeppelinSession(z.z)\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170312-173616_1035870734","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<div id=\"__Zeppelin_Session_2CEC92C3S_Comm__\">{{__zeppelin_comm_2CEC92C3S_status__}}</div>\n\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:447"},{"title":"... and start it in the next paragraph","text":"%pyspark\n\nzs.start()\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170312-173708_574610088","result":{"code":"SUCCESS","type":"ANGULAR","msg":"<div>You should now see<br><span style=\"margin:20px\"><i>ZeppelinSession started (do not delete this paragraph)</i></span></br>in the paragraph above</div>\n\n<script>\n    var sessionCommVar = \"__zeppelin_comm_2CEC92C3S_msg__\";\n    var sessionCommDivId = \"__Zeppelin_Session_2CEC92C3S_Comm__\"\n    var execution_id = \"5a5de6ba-aca4-429f-a8fc-900e0a4e9844\";                                                 // Avoid double execution\n    if(window.__zeppelin_already_executed__ == null) {                       //\n        window.__zeppelin_already_executed__ = [];                           //\n    }                                                                        //\n    if(!window.__zeppelin_already_executed__.includes(execution_id)) {       // Avoid double execution\n\n        window.__zeppelin_session_debug = 0; // no debug output\n        var Logger = function(name) {\n            this.name = name;\n        }\n        Logger.prototype.info = function(msg) {\n            if (window.__zeppelin_session_debug > 0) {\n                console.info(this.name + \" [INFO] \" + msg)\n            }\n        }\n        Logger.prototype.debug = function(msg) {\n            if (window.__zeppelin_session_debug > 1) {\n                console.log(this.name + \" [DEBUG] \" + msg)\n            }\n        }\n        var logger = new Logger(\"ZeppelinSession\");\n\n        // Get the angular scope of the session div element\n\n        logger.debug(\"Get scope for div id\" + sessionCommDivId);\n        var $scope = angular.element(document.getElementById(sessionCommDivId)).scope();\n\n        // make scope easily accessible in Web Console\n\n        window.__zeppelin_comm_scope = $scope;\n\n        // Remove any remaining watcher from last session\n\n        if(typeof(window.__zeppelin_notebook_unwatchers__) !== \"undefined\") {\n            logger.info(\"ZeppelinSession: Cancel watchers\");\n            var unwatchers = window.__zeppelin_notebook_unwatchers__\n            for(i in unwatchers) {\n                unwatchers[i]();\n            }\n        }\n        \n        // Array to note all active watchers (as with their respective unwatcher function)\n\n        window.__zeppelin_notebook_unwatchers__ = [];\n\n        // Main Handler\n\n        logger.info(\"Install Angular watcher for session comm var \" + sessionCommVar);\n        var unwatch = $scope.$watch(sessionCommVar, function(newValue, oldValue, scope) {\n            if(typeof(newValue) !== \"undefined\") {\n                // logger.info(newValue);\n                if (newValue.task === \"call\") {\n\n                    // Format: newValue = {\"id\": int, task\":\"call\", \"msg\":{\"function\":\"func_name\", \"object\":\"json_object\", \"delay\":ms}}\n                    \n                    var data = newValue.msg;\n                    logger.debug(\"Calling function \" + data.function + \" with delay: \" + data.delay)\n\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        setTimeout(function() {\n                            $scope.__functions[data.function]($scope, data.object);\n                        }, data.delay);\n                    } else {\n                        console.error(\"Unknown function: \" + data.function + \"()\")\n                    }\n                    \n                } else if (newValue.task === \"register\") {\n                    // Format: newValue = {\"id\": int, task\":\"register\", \"msg\":{\"function\":\"func_name\", \"funcBody\":\"function_as_string\"}}\n                    \n                    var data = newValue.msg;\n                    logger.debug(\"Registering function \" + data.function)\n                    \n                    var func = eval(data.funcBody);\n                    $scope.__functions[data.function] = func;\n                    \n                } else if (newValue.task === \"unregister\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"unregister\", \"msg\":{\"function\":\"func_name\"}}\n                    \n                    var data = newValue.msg;\n                    logger.debug(\"Unregistering function \" + data.function)\n\n                    if (typeof($scope.__functions[data.function]) === \"function\") {\n                        delete $scope.__functions[data.function];\n                    }               \n                    \n                } else if (newValue.task === \"dump\") {\n                    \n                    // Format: newValue = {\"id\": int, task\":\"dump\", \"msg\":{}}\n                    \n                    logger.debug(\"sessionCommDivId: \", sessionCommDivId);\n                    logger.debug(\"$scope: \", $scope);\n\n                } else {\n\n                    // Jupyter.notebook.kernel.session.handleMsg(newValue);\n\n                    console.error(\"Unknown task: \" + newValue.task)\n                }\n            }\n        }, true)\n\n        // Initialize the object that will hold the registered functions\n        $scope.__functions = {};\n        \n        // remember unwatch function to clean up later\n        window.__zeppelin_notebook_unwatchers__.push(unwatch)\n\n        // mark init as executed\n        window.__zeppelin_already_executed__.push(execution_id);            // Avoid double execution\n    } else {                                                                //\n        logger.info(\"Angular script already executed, skipped\");           //\n    }                                                                       // Avoid double execution\n</script>\n\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:448"},{"title":"Initialize NVD3","text":"%pyspark\n\nfrom zeppelin_viz.nvd3 import Nvd3\nfrom zeppelin_viz.nvd3.nvd3_chart import Nvd3Chart\n\nnv = Nvd3()\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170312-173747_1491081154","result":{"code":"SUCCESS","type":"HTML","msg":"<script src=\"http://cdn.rawgit.com/exupero/saveSvgAsPng/gh-pages/saveSvgAsPng.js\" type=\"text/javascript\"></script>\n<div>Downloaded http://cdn.rawgit.com/exupero/saveSvgAsPng/gh-pages/saveSvgAsPng.js to allow saving charts to PNG</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:449"},{"title":"Recommend to load NVD3 1.8.5 (this might break some %sql functionality)","text":"%pyspark\nnv.reloadNVD3(\"1.8.5\")\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":[{"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}}],"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170313-074211_2023603071","result":{"code":"SUCCESS","type":"HTML","msg":"\n        <link href=\"https://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.5/nv.d3.min.css\" rel=\"stylesheet\">\n        <script src=\"https://cdnjs.cloudflare.com/ajax/libs/nvd3/1.8.5/nv.d3.js\"></script>\n        \n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:450"},{"text":"%md\n# 1 Included Charts\n\n## 1.1 Box Plot Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170313-160339_90253745","result":{"code":"SUCCESS","type":"HTML","msg":"<h1>1 Included Charts</h1>\n<h2>1.1 Box Plot Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:451"},{"text":"%pyspark\nprint(iris.head())\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374569_1220615834","id":"20170317-154426_661438616","result":{"code":"SUCCESS","type":"TEXT","msg":"   SepalLength  SepalWidth  PetalLength  PetalWidth         Name\n0          5.1         3.5          1.4         0.2  Iris-setosa\n1          4.9         3.0          1.4         0.2  Iris-setosa\n2          4.7         3.2          1.3         0.2  Iris-setosa\n3          4.6         3.1          1.5         0.2  Iris-setosa\n4          5.0         3.6          1.4         0.2  Iris-setosa\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:452"},{"title":"Compare the three species (IQR box plot)","text":"%pyspark\n#!zeppelin2md:images/boxPlotChart-03.png\n\nbp1 = nv.boxPlotChart()\n\nconfig={\"height\": 400, \"width\":450, \"color\":nv.c10(),\n        \"yDomain\": [-0.5, 8.5], \"maxBoxWidth\":False }\n\ndef getSpecies(name):\n    return iris[iris.Name==name].loc[:,iris.columns != 'Name']\n\nsetosa     = bp1.convert(data=getSpecies(\"Iris-setosa\"    ), boxStyle=\"iqr\")\nversicolor = bp1.convert(data=getSpecies(\"Iris-versicolor\"), boxStyle=\"iqr\")\nvirginica  = bp1.convert(data=getSpecies(\"Iris-virginica\" ), boxStyle=\"iqr\")\n         \ndisplay(html=[(\"Iris-setosa\", 40),(\"Iris-versicolor\", 330),(\"Iris-virginica\", 300)], style=\"h3\")\n\nbp1.plot([\n    {\"data\":setosa,     \"config\":config},\n    {\"data\":versicolor, \"config\":config},\n    {\"data\":virginica,  \"config\":config}\n])\n\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170317-150707_2126564029","result":{"code":"SUCCESS","type":"HTML","msg":"<h3><div style=\"display:inline; margin-left:40px\">Iris-setosa</div><div style=\"display:inline; margin-left:330px\">Iris-versicolor</div><div style=\"display:inline; margin-left:300px\">Iris-virginica</div></h3>\n<div style=\"height:400px; width:1350px\">\n\n            <div id=\"boxPlotChart-134\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:450px\">\n                <svg></svg>\n            </div>\n            \n\n            <div id=\"boxPlotChart-135\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:450px\">\n                <svg></svg>\n            </div>\n            \n\n            <div id=\"boxPlotChart-136\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:450px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:453"},{"title":"Compare IQR and Min-Max box plot","text":"%pyspark\n#!zeppelin2md:images/boxPlotChart-04.png\n\nbp2 = nv.boxPlotChart()\n\nconfig={\"height\": 400, \"width\":450, \"color\":nv.c10(),\n        \"yDomain\": [-0.5, 6], \"maxBoxWidth\":False }\n\ndisplay(html=[(\"IQR\", 40),(\"Min-Max\", 400)], style=\"h3\")\n\niqr =    bp2.convert(data=getSpecies(\"Iris-setosa\"), boxStyle=\"iqr\")\nminmax = bp2.convert(data=getSpecies(\"Iris-setosa\"), boxStyle=\"min-max\")\n\nbp2.plot([\n    {\"data\":iqr,     \"config\":config},\n    {\"data\":minmax,  \"config\":config}\n])         \n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170313-200613_972915341","result":{"code":"SUCCESS","type":"HTML","msg":"<h3><div style=\"display:inline; margin-left:40px\">IQR</div><div style=\"display:inline; margin-left:400px\">Min-Max</div></h3>\n<div style=\"height:400px; width:900px\">\n\n            <div id=\"boxPlotChart-137\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:450px\">\n                <svg></svg>\n            </div>\n            \n\n            <div id=\"boxPlotChart-138\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:450px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:454"},{"text":"%md\n\n## Limitations\n\n- ZeppelinSession is a pure frontend integration, hence a **shared notebook will not see the charts**\n- ZeppelinSession depends on the Angular scope of the notebook, after leaving and re-entering the notebook, the scope is gone and the **charts are gone**","dateUpdated":"2017-03-27T12:39:34+0000","config":{"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170320-154257_1354667801","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>Limitations</h2>\n<ul>\n<li>ZeppelinSession is a pure frontend integration, hence a <strong>shared notebook will not see the charts</strong></li>\n<li>ZeppelinSession depends on the Angular scope of the notebook, after leaving and re-entering the notebook, the scope is gone and the <strong>charts are gone</strong></li>\n</ul>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:455"},{"text":"%md\n\n## 3.2 Line Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170313-161407_1460612817","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.2 Line Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:456"},{"text":"%pyspark\nx = np.linspace(0, 4*np.pi, 100)\n\nl_df = pd.DataFrame({\"X\":x*1000, \"Sin\":np.sin(x), \"Cos\":np.cos(x), \"ArcTan\":np.arctan(x-2*np.pi)/3})\n# l_df = pd.DataFrame({\"X\":lastDays(100, epoch=True, ms=True),\"Sin\":np.sin(x), \"Cos\":np.cos(x), \"ArcTan\":np.arctan(x-2*np.pi)/3})\n\nprint(l_df.head())\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170319-162443_1869816905","result":{"code":"SUCCESS","type":"TEXT","msg":"     ArcTan       Cos       Sin           X\n0 -0.470988  1.000000  0.000000    0.000000\n1 -0.469922  0.991955  0.126592  126.933037\n2 -0.468812  0.967949  0.251148  253.866073\n3 -0.467656  0.928368  0.371662  380.799110\n4 -0.466450  0.873849  0.486197  507.732146\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:457"},{"text":"%pyspark\n#!zeppelin2md:images/lineChart-035.png\n\nl1 = nv.lineChart()\n\nconfig={\"height\":500, \"width\": 1024,\n        \"focusEnable\": False, \"color\":nv.c20b()[10:13], \n        \"yAxis\": {\"axisLabel\":\"f(x)\", \"tickFormat\":\",.2f\"}, \n        \"xAxis\":{\"axisLabel\":\"x\", \"tickFormat\":\",.2f\"}}\n        \nlineAttributes={\"area\":[True, False, True], \"fillOpacity\":[0.2, 0, 0.2], \"style\":[\"dashed\", \"dotted\", None]}\n\ndata = l1.convert(data=l_df[:70], key=\"X\", values=[\"Sin\", \"Cos\", \"ArcTan\"],lineAttributes=lineAttributes)        \n\nl1.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{"0":{"graph":{"mode":"table","height":589,"optionOpen":false}}},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170314-123444_2108268612","result":{"code":"SUCCESS","type":"HTML","msg":"<style>.dashed { stroke-dasharray: 7,7; }\n.dotted { stroke-dasharray: 3,3; } </style>\n<div style=\"height:500px; width:1024px\">\n\n            <div id=\"lineChart-159\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:500px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:458"},{"title":"Dynamically add values","text":"%pyspark\nimport time\n\nfor i in range(71,100):\n    time.sleep(0.1)\n    data = l1.convert(data=l_df[i:i+1], key=\"X\", values=[\"Sin\", \"Cos\", \"ArcTan\"], lineAttributes=lineAttributes)\n    l1.append({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170315-202947_1120177108","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:459"},{"title":"Add a focus selector ","text":"%pyspark\n#!zeppelin2md:images/lineChart-036.png\n\nl2 = nv.lineChart()\n\nconfig={\"height\":500, \"width\": 1024,\n        \"focusEnable\": True, \"color\":nv.c10(), \n        \"yAxis\": {\"axisLabel\":\"f(x)\", \"tickFormat\":\",.2f\"}, \n        \"xAxis\":{\"axisLabel\":\"x\", \"tickFormat\":\"%d-%m-%Y\"}}\n\nlineAttributes={\"area\":[True, False, True], \"fillOpacity\":[0.2, 0, 0.2], \"style\":[\"dashed\", \"dotted\", None]}\ndata = l2.convert(l_df, \"X\", [\"Sin\", \"Cos\", \"ArcTan\"],lineAttributes=lineAttributes) \n\nl2.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374570_1221770081","id":"20170315-110436_827257444","result":{"code":"SUCCESS","type":"HTML","msg":"<style>.dashed { stroke-dasharray: 7,7; }\n.dotted { stroke-dasharray: 3,3; } </style>\n<div style=\"height:500px; width:1024px\">\n\n            <div id=\"lineChart-140\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:500px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:460"},{"text":"%md\n\n## 3.3 Discrete Bar Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170313-161159_1872898339","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.3 Discrete Bar Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:461"},{"text":"%pyspark\n#!zeppelin2md:images/discreteBarChart-037.png\n\ndb_df = pd.DataFrame(iris.loc[:, iris.columns != \"Name\"].mean()).reset_index()\ndb_df.columns = [\"Series\", \"Mean\"]\n\ndb = nv.discreteBarChart()\n\nconfig={\"height\": 350, \"width\": 500, \"color\": nv.c20(), \"staggerLabels\": False}\n\ndata = db.convert(db_df, key=\"Series\", value=\"Mean\")\n\ndb.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170313-135356_2058840965","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:350px; width:500px\">\n\n            <div id=\"discreteBarChart-141\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:350px; width:500px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:462"},{"text":"%md\n\n## 3.4 Multi Bar Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170313-161527_449359810","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.4 Multi Bar Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:463"},{"text":"%pyspark\n#!zeppelin2md:images/multiBarChart-038.png\n\nx = np.linspace(0, 4*np.pi, 10)\nmb_df = pd.DataFrame({\"X\":x, \"Sin\":np.sin(x), \"Cos\":np.cos(x), \"ArcTan\":np.arctan(x-2*np.pi)/3})\n\nmb1 = nv.multiBarChart()\n\nconfig = {\"height\":500, \"width\": 800, \n          \"color\": nv.c20(),\n          \"xAxis\":{\"axisLabel\":\"x\", \"tickFormat\":\",.2f\"},\n          \"yAxis\":{\"axisLabel\":\"f(x)\", \"tickFormat\":\",.2f\"}}\n\ndata = mb1.convert(mb_df[:6], \"X\", [\"Sin\", \"Cos\", \"ArcTan\"])\n\nmb1.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170313-141626_973367084","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:500px; width:800px\">\n\n            <div id=\"multiBarChart-142\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:500px; width:800px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:464"},{"text":"%pyspark\n\nfor i in range(6,10):\n    time.sleep(0.5)\n    data = mb1.convert(mb_df[i:i+1], \"X\", [\"Sin\", \"Cos\", \"ArcTan\"])\n    mb1.append({\"data\":data, \"config\":config})\n    ","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170315-204923_222151667","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:465"},{"text":"%md\n## 3.5 Multi Bar Horizontal Chart","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170315-191243_1253869324","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.5 Multi Bar Horizontal Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:466"},{"text":"%pyspark\n#!zeppelin2md:images/multiBarHorizontalChart-039.png\n\nmbh = nv.multiBarHorizontalChart()\n\nconfig = {\"height\":500, \"width\": 800, \"color\":nv.c20()[10:], \"stacked\":False}\n\ndata = mbh.convert(mb_df, \"X\", [\"Sin\", \"Cos\", \"ArcTan\"])\n\nmbh.plot({\"data\":data,\"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170315-191210_99140198","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:500px; width:800px\">\n\n            <div id=\"multiBarHorizontalChart-143\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:500px; width:800px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:467"},{"text":"%md\n\n## 3.6 Line Plus Bar Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170313-191140_871106504","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.6 Line Plus Bar Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:468"},{"title":"Load HDP historical Stock data","text":"%pyspark\n\nhdp = downloadHistoricalStockData('HDP', (2016,3,18), (2017,3,18))\nhdp.head(5)\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374571_1221385332","id":"20170319-170538_1457149481","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:469"},{"text":"%pyspark\n#!zeppelin2md:images/linePlusBarChart-040.png\n\ncount = 100\nquantity = randomWalk(500, 20, 100)\nprice = randomWalk(500, 2, 20)\ndate = lastDays(500)\n\nlpb_df = pd.DataFrame({\"Date\":date, \"Quantity\":quantity, \"Price\":price})\n\nlpb = nv.linePlusBarChart()\n\nconfig={\"color\":[nv.c20()[0], nv.c20()[3]], \n        \"height\":600, \"width\":1200,\n        \"xAxis\":{\"tickFormat\":\"%d.%m.%y\"},\n        \"x2Axis\":{\"tickFormat\":\"%d.%m.%y\"}\n}\n\ndata = lpb.convert(hdp, \"Timestamp\", lineValue=\"Close\", barValue=\"Volume\")\n\nlpb.plot({\"data\":data,\"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170315-195902_1844525573","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:600px; width:1200px\">\n\n            <div id=\"linePlusBarChart-145\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:600px; width:1200px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:470"},{"text":"%md\n\n## 3.7 Pie Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170313-161705_1238509298","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.7 Pie Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:471"},{"text":"%pyspark\n#!zeppelin2md:images/pieChart-04.png\n\np = nv.pieChart()\n\nconfig1={\"donut\": False,                  \"color\": nv.c10(),  \"width\": 300, \"height\":400}\nconfig2={\"donut\": True,                   \"color\": nv.c20(),  \"width\": 300, \"height\":400}\nconfig3={\"donut\": True,  \"halfPie\": True, \"color\": nv.c20b(), \"width\": 300, \"height\":400}\n\ndata = p.convert(db_df, \"Series\", \"Mean\")\n\np.plot([{\"data\":data,\"config\":config1},\n        {\"data\":data,\"config\":config2},\n        {\"data\":data,\"config\":config3}])\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170317-155013_1327062227","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:400px; width:900px\">\n\n            <div id=\"pieChart-146\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:300px\">\n                <svg></svg>\n            </div>\n            \n\n            <div id=\"pieChart-147\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:300px\">\n                <svg></svg>\n            </div>\n            \n\n            <div id=\"pieChart-148\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:300px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:472"},{"text":"%pyspark\n\nconfig = [config1, config2, config3]\n\nfor chart in range(3):\n    data = p.convert(pd.DataFrame([{\"Series\":\"New\", \"Mean\":3.42}]), \"Series\", \"Mean\")\n    p.append({\"data\":data,\"config\":config[chart]}, chart=chart)\n    ","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170317-155102_2038223657","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:473"},{"text":"%md\n\n## 3.8 Stacked Area Chart","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170313-161730_1582960156","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.8 Stacked Area Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:474"},{"text":"%pyspark\n#!zeppelin2md:images/stackedAreaChart-044.png\n\nimport time\nfrom datetime import datetime\n\ncount = 100\ngroups = 5\n\nseries = []\nfor i in range(groups):\n    factor = np.random.randint(5,10)\n    offset = np.random.randint(20,100)\n    series.append(randomWalk(count, 20, offset).tolist())\n\nsa_df = pd.DataFrame([lastDays(count, epoch=True)] + series).T\nsa_df.columns = [\"Date\"] + [\"Series %d\" % i  for i in range(groups)]\n\n\nsa = nv.stackedAreaChart()\n\nconfig={\"color\": nv.c20(), \"height\":500}\ndata = sa.convert(sa_df, \"Date\", [\"Series %d\" % i for i in range(groups)])\n\nsa.plot({\"data\":data,\"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170314-164321_1267288478","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:500px; width:1024px\">\n\n            <div id=\"stackedAreaChart-149\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:500px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:475"},{"text":"%md\n\n## 3.9 Scatter Plus Line Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170313-191509_1852804097","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.9 Scatter Plus Line Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:476"},{"text":"%pyspark\nfrom sklearn import linear_model\n\nsetosa     = iris[iris.Name == \"Iris-setosa\"]\nversicolor = iris[iris.Name == \"Iris-versicolor\"]\nvirginica  = iris[iris.Name == \"Iris-virginica\"]\n\ndef linReg(x,y):\n    regr = linear_model.LinearRegression()\n    regr.fit(x,y)\n    return (regr.coef_.item(0), regr.intercept_.item(0))\n    \ndef prepare(df, name):\n    sepal = df.loc[:,[\"SepalLength\", \"SepalWidth\"]]\n    sepal.columns = [\"X\", name]\n    sepal[\"Shape\"] = \"diamond\"\n    petal = df.loc[:,[\"PetalLength\", \"PetalWidth\"]]\n    petal.columns = [\"X\", name]\n    petal[\"Shape\"] = \"square\"\n    \n    df = pd.concat([sepal, petal])\n    x = df[\"X\"].values.reshape(df.shape[0], 1)\n    y = df[name].values.reshape(df.shape[0], 1)\n    slope, intercept = linReg(x,y)\n\n    df[\"Size\"] = 2\n    df = df.groupby([\"Shape\", \"X\", name]).sum().reset_index()\n    return (df, slope, intercept)\n\nsetosaDf,     setosaSlope,     setosaIntercept     = prepare(setosa,     \"Setosa\")\nvirginicaDf,  virginicaSlope,  virginicaIntercept  = prepare(virginica,  \"Virginica\")\nversicolorDf, versicolorSlope, versicolorIntercept = prepare(versicolor, \"Versicolor\")\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374572_1219461588","id":"20170316-203241_616587572","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:477"},{"text":"%pyspark\n#!zeppelin2md:images/scatterPlusLineChart-045.png\n\nspl = nv.scatterPlusLineChart()\n\nconfig = {\"height\":700, \"xDomain\":[0,8.5], \"yDomain\":[0,4.6],\n          \"xAxis\":{\"axisLabel\":\"Length (sepal=diamond, petal=square)\"}, \"yAxis\":{\"axisLabel\":\"Width (sepal=diamond, petal=square)\"}\n}\n\ndata = spl.convert(data=[{ \"data\":setosaDf, \"keys\":\"X\", \"values\":\"Setosa\", \n                           \"lines\":{\"slope\":setosaSlope, \"intercept\":setosaIntercept}, \n                           \"pointAttributes\":{\"shapes\":\"Shape\",  \"sizes\":\"Size\"} },\n                           \n                         { \"data\":virginicaDf, \"keys\":\"X\", \"values\":\"Virginica\", \n                           \"lines\":{\"slope\":virginicaSlope, \"intercept\":virginicaIntercept}, \n                           \"pointAttributes\":{\"shapes\":\"Shape\", \"sizes\":\"Size\"} },\n                           \n                         { \"data\":versicolorDf, \"keys\":\"X\", \"values\":\"Versicolor\", \n                           \"lines\":{\"slope\":versicolorSlope, \"intercept\":versicolorIntercept}, \n                           \"pointAttributes\":{\"shapes\":\"Shape\", \"sizes\":\"Size\"} }\n                           ])\n                           \nspl.plot({\"data\":data, \"config\":config})\n\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170316-205700_1807352313","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:700px; width:1024px\">\n\n            <div id=\"scatterPlusLineChart-150\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:700px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:478"},{"text":"%md\n\n## 3.10 Parallel Coordinates Plot\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170316-172843_902403708","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.10 Parallel Coordinates Plot</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:479"},{"text":"%pyspark\niris.loc[iris.Name==\"Iris-setosa\",     \"color\"] = nv.c10()[0]\niris.loc[iris.Name==\"Iris-versicolor\", \"color\"] = nv.c10()[1]\niris.loc[iris.Name==\"Iris-virginica\",  \"color\"] = nv.c10()[2]\niris[\"strokeWidth\"] = 0.5\niris.head()\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170317-163754_2048422860","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:480"},{"text":"%pyspark\n#!zeppelin2md:images/parallelCoordinatesChart-046.png\n\npc = nv.parallelCoordinatesChart()\n\nconfig = {\"height\": 600}\n\ndata, dim = pc.convert(iris, 'Name', ['SepalWidth', 'SepalLength', 'PetalWidth', 'PetalLength'],\n                       lineAttributes=[\"color\", \"strokeWidth\"], \n                       dimAttributes= {\"format\": [\",.1f\", \",.1f\", \",.1f\", \",.1f\"]})\n                       \npc.plot({\"data\":data, \"dim\":dim, \"config\":config})    \n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","editorHide":false,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170316-172905_1789805930","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:600px; width:1024px\">\n\n            <div id=\"parallelCoordinatesChart-151\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:600px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:481"},{"text":"%md\n## 3.11 Historical Bar Chart","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170319-191111_661595190","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.11 Historical Bar Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:482"},{"text":"%pyspark\n#!zeppelin2md:images/historicalBarChart-047.png\n\nhb = nv.historicalBarChart()\nhdp[\"VolumeMio\"] = hdp[\"Volume\"] / 10000000\n\nconfig = {\"color\":nv.c20()[4:],\n          \"xAxis\":{\"axisLabel\":\"Date (d.m.y)\"},\n          \"yAxis\":{\"axisLabel\":\"Volume (Mio)\", \"tickFormat\":\",.2f\"}}\n\ndata = hb.convert(hdp, key=\"Timestamp\", value=\"VolumeMio\")\n\nhb.plot({\"data\":data, \"dim\":dim, \"config\":config})","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170319-191109_2147365765","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:400px; width:1024px\">\n\n            <div id=\"historicalBarChart-152\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:400px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:483"},{"text":"%md\n## 3.12 Candlestick Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170319-191103_1734338169","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.12 Candlestick Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:484"},{"text":"%pyspark\n#!zeppelin2md:images/candlestickBarChart-048.png\n\ncs = nv.candlestickBarChart()\n\nohlcAttribs = {\"open\":\"Open\" ,\"high\":\"High\" ,\"low\":\"Low\" ,\"volume\":\"Volume\" ,\"adjusted\":\"Adj_Close\"}\ndata = cs.convert(hdp[-90:], \"Timestamp\", \"Close\", ohlcAttribs)\n\nconfig = {\"color\":nv.c10(), \"yDomain\":[7,12], \"width\":1400, \"height\":800,\n          \"xAxis\":{\"tickFormat\":\"%d/%m/%Y\", \"axisLabel\":\"Date (d/m/y)\"},\n          \"yAxis\":{\"axisLabel\":\"Close (USD)\"}}\n\ncs.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374573_1219076839","id":"20170319-191101_926228226","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:800px; width:1400px\">\n\n            <div id=\"candlestickBarChart-156\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:800px; width:1400px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:485"},{"text":"%md\n## 3.13 OHLC Chart\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170319-191226_72836656","result":{"code":"SUCCESS","type":"HTML","msg":"<h2>3.13 OHLC Chart</h2>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:486"},{"text":"%pyspark\n#!zeppelin2md:images/ohlcBarChart-049.png\n\nohlc = nv.ohlcBarChart()\n\nohlcAttribs = {\"open\":\"Open\" ,\"high\":\"High\" ,\"low\":\"Low\" ,\"volume\":\"Volume\" ,\"adjusted\":\"Adj_Close\"}\ndata = ohlc.convert(hdp[-90:], \"Timestamp\", \"Close\", ohlcAttribs)\n\nconfig = {\"color\":nv.c20(), \"yDomain\":[7,12], \"width\":1400, \"height\":800,\n          \"xAxis\":{\"tickFormat\":\"%d/%m/%Y\", \"axisLabel\":\"Date (d/m/y)\"},\n          \"yAxis\":{\"axisLabel\":\"Open / High / Low / Close  (USD)\"}}\n\nohlc.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170319-191224_1426162299","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:800px; width:1400px\">\n\n            <div id=\"ohlcBarChart-157\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:800px; width:1400px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:487"},{"text":"%md\n## 3.14 Sun Burst Chart","dateUpdated":"2017-03-27T12:39:34+0000","config":{"tableHide":false,"editorSetting":{"language":"markdown","editOnDblClick":true},"colWidth":12,"editorMode":"ace/mode/markdown","editorHide":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170315-191652_1355138106","dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:488"},{"title":"Test Data","text":"%pyspark\ndata = [{\n    \"name\": \"flare\",\n    \"children\": [\n        {\n            \"name\": \"analytics\",\n            \"children\": [\n                {\n                    \"name\": \"cluster\",\n                    \"children\": [\n                        {\"name\": \"AgglomerativeCluster\", \"size\": 3938},\n                        {\"name\": \"CommunityStructure\", \"size\": 3812},\n                        {\"name\": \"HierarchicalCluster\", \"size\": 6714},\n                        {\"name\": \"MergeEdge\", \"size\": 743}\n                    ]\n                },\n                {\n                    \"name\": \"graph\",\n                    \"children\": [\n                        {\"name\": \"BetweennessCentrality\", \"size\": 3534},\n                        {\"name\": \"LinkDistance\", \"size\": 5731},\n                        {\"name\": \"MaxFlowMinCut\", \"size\": 7840},\n                        {\"name\": \"ShortestPaths\", \"size\": 5914},\n                        {\"name\": \"SpanningTree\", \"size\": 3416}\n                    ]\n                },\n                {\n                    \"name\": \"optimization\",\n                    \"children\": [\n                        {\"name\": \"AspectRatioBanker\", \"size\": 7074}\n                    ]\n                }\n            ]\n        },\n        {\n            \"name\": \"animate\",\n            \"children\": [\n                {\"name\": \"Easing\", \"size\": 17010},\n                {\"name\": \"FunctionSequence\", \"size\": 5842},\n                {\n                    \"name\": \"interpolate\",\n                    \"children\": [\n                        {\"name\": \"ArrayInterpolator\", \"size\": 1983},\n                        {\"name\": \"ColorInterpolator\", \"size\": 2047},\n                        {\"name\": \"DateInterpolator\", \"size\": 1375},\n                        {\"name\": \"Interpolator\", \"size\": 8746},\n                        {\"name\": \"MatrixInterpolator\", \"size\": 2202},\n                        {\"name\": \"NumberInterpolator\", \"size\": 1382},\n                        {\"name\": \"ObjectInterpolator\", \"size\": 1629},\n                        {\"name\": \"PointInterpolator\", \"size\": 1675},\n                        {\"name\": \"RectangleInterpolator\", \"size\": 2042}\n                    ]\n                },\n                {\"name\": \"ISchedulable\", \"size\": 1041},\n                {\"name\": \"Parallel\", \"size\": 5176},\n                {\"name\": \"Pause\", \"size\": 449},\n                {\"name\": \"Scheduler\", \"size\": 5593},\n                {\"name\": \"Sequence\", \"size\": 5534},\n                {\"name\": \"Transition\", \"size\": 9201},\n                {\"name\": \"Transitioner\", \"size\": 19975},\n                {\"name\": \"TransitionEvent\", \"size\": 1116},\n                {\"name\": \"Tween\", \"size\": 6006}\n            ]\n        },\n        {\n            \"name\": \"data\",\n            \"children\": [\n                {\n                    \"name\": \"converters\",\n                    \"children\": [\n                        {\"name\": \"Converters\", \"size\": 721},\n                        {\"name\": \"DelimitedTextConverter\", \"size\": 4294},\n                        {\"name\": \"GraphMLConverter\", \"size\": 9800},\n                        {\"name\": \"IDataConverter\", \"size\": 1314},\n                        {\"name\": \"JSONConverter\", \"size\": 2220}\n                    ]\n                },\n                {\"name\": \"DataField\", \"size\": 1759},\n                {\"name\": \"DataSchema\", \"size\": 2165},\n                {\"name\": \"DataSet\", \"size\": 586},\n                {\"name\": \"DataSource\", \"size\": 3331},\n                {\"name\": \"DataTable\", \"size\": 772},\n                {\"name\": \"DataUtil\", \"size\": 3322}\n            ]\n        },\n        {\n            \"name\": \"display\",\n            \"children\": [\n                {\"name\": \"DirtySprite\", \"size\": 8833},\n                {\"name\": \"LineSprite\", \"size\": 1732},\n                {\"name\": \"RectSprite\", \"size\": 3623},\n                {\"name\": \"TextSprite\", \"size\": 10066}\n            ]\n        },\n        {\n            \"name\": \"flex\",\n            \"children\": [\n                {\"name\": \"FlareVis\", \"size\": 4116}\n            ]\n        },\n        {\n            \"name\": \"physics\",\n            \"children\": [\n                {\"name\": \"DragForce\", \"size\": 1082},\n                {\"name\": \"GravityForce\", \"size\": 1336},\n                {\"name\": \"IForce\", \"size\": 319},\n                {\"name\": \"NBodyForce\", \"size\": 10498},\n                {\"name\": \"Particle\", \"size\": 2822},\n                {\"name\": \"Simulation\", \"size\": 9983},\n                {\"name\": \"Spring\", \"size\": 2213},\n                {\"name\": \"SpringForce\", \"size\": 1681}\n            ]\n        },\n        {\n            \"name\": \"query\",\n            \"children\": [\n                {\"name\": \"AggregateExpression\", \"size\": 1616},\n                {\"name\": \"And\", \"size\": 1027},\n                {\"name\": \"Arithmetic\", \"size\": 3891},\n                {\"name\": \"Average\", \"size\": 891},\n                {\"name\": \"BinaryExpression\", \"size\": 2893},\n                {\"name\": \"Comparison\", \"size\": 5103},\n                {\"name\": \"CompositeExpression\", \"size\": 3677},\n                {\"name\": \"Count\", \"size\": 781},\n                {\"name\": \"DateUtil\", \"size\": 4141},\n                {\"name\": \"Distinct\", \"size\": 933},\n                {\"name\": \"Expression\", \"size\": 5130},\n                {\"name\": \"ExpressionIterator\", \"size\": 3617},\n                {\"name\": \"Fn\", \"size\": 3240},\n                {\"name\": \"If\", \"size\": 2732},\n                {\"name\": \"IsA\", \"size\": 2039},\n                {\"name\": \"Literal\", \"size\": 1214},\n                {\"name\": \"Match\", \"size\": 3748},\n                {\"name\": \"Maximum\", \"size\": 843},\n                {\n                    \"name\": \"methods\",\n                    \"children\": [\n                        {\"name\": \"add\", \"size\": 593},\n                        {\"name\": \"and\", \"size\": 330},\n                        {\"name\": \"average\", \"size\": 287},\n                        {\"name\": \"count\", \"size\": 277},\n                        {\"name\": \"distinct\", \"size\": 292},\n                        {\"name\": \"div\", \"size\": 595},\n                        {\"name\": \"eq\", \"size\": 594},\n                        {\"name\": \"fn\", \"size\": 460},\n                        {\"name\": \"gt\", \"size\": 603},\n                        {\"name\": \"gte\", \"size\": 625},\n                        {\"name\": \"iff\", \"size\": 748},\n                        {\"name\": \"isa\", \"size\": 461},\n                        {\"name\": \"lt\", \"size\": 597},\n                        {\"name\": \"lte\", \"size\": 619},\n                        {\"name\": \"max\", \"size\": 283},\n                        {\"name\": \"min\", \"size\": 283},\n                        {\"name\": \"mod\", \"size\": 591},\n                        {\"name\": \"mul\", \"size\": 603},\n                        {\"name\": \"neq\", \"size\": 599},\n                        {\"name\": \"not\", \"size\": 386},\n                        {\"name\": \"or\", \"size\": 323},\n                        {\"name\": \"orderby\", \"size\": 307},\n                        {\"name\": \"range\", \"size\": 772},\n                        {\"name\": \"select\", \"size\": 296},\n                        {\"name\": \"stddev\", \"size\": 363},\n                        {\"name\": \"sub\", \"size\": 600},\n                        {\"name\": \"sum\", \"size\": 280},\n                        {\"name\": \"update\", \"size\": 307},\n                        {\"name\": \"variance\", \"size\": 335},\n                        {\"name\": \"where\", \"size\": 299},\n                        {\"name\": \"xor\", \"size\": 354},\n                        {\"name\": \"_\", \"size\": 264}\n                    ]\n                },\n                {\"name\": \"Minimum\", \"size\": 843},\n                {\"name\": \"Not\", \"size\": 1554},\n                {\"name\": \"Or\", \"size\": 970},\n                {\"name\": \"Query\", \"size\": 13896},\n                {\"name\": \"Range\", \"size\": 1594},\n                {\"name\": \"StringUtil\", \"size\": 4130},\n                {\"name\": \"Sum\", \"size\": 791},\n                {\"name\": \"Variable\", \"size\": 1124},\n                {\"name\": \"Variance\", \"size\": 1876},\n                {\"name\": \"Xor\", \"size\": 1101}\n            ]\n        },\n        {\n            \"name\": \"scale\",\n            \"children\": [\n                {\"name\": \"IScaleMap\", \"size\": 2105},\n                {\"name\": \"LinearScale\", \"size\": 1316},\n                {\"name\": \"LogScale\", \"size\": 3151},\n                {\"name\": \"OrdinalScale\", \"size\": 3770},\n                {\"name\": \"QuantileScale\", \"size\": 2435},\n                {\"name\": \"QuantitativeScale\", \"size\": 4839},\n                {\"name\": \"RootScale\", \"size\": 1756},\n                {\"name\": \"Scale\", \"size\": 4268},\n                {\"name\": \"ScaleType\", \"size\": 1821},\n                {\"name\": \"TimeScale\", \"size\": 5833}\n            ]\n        },\n        {\n            \"name\": \"util\",\n            \"children\": [\n                {\"name\": \"Arrays\", \"size\": 8258},\n                {\"name\": \"Colors\", \"size\": 10001},\n                {\"name\": \"Dates\", \"size\": 8217},\n                {\"name\": \"Displays\", \"size\": 12555},\n                {\"name\": \"Filter\", \"size\": 2324},\n                {\"name\": \"Geometry\", \"size\": 10993},\n                {\n                    \"name\": \"heap\",\n                    \"children\": [\n                        {\"name\": \"FibonacciHeap\", \"size\": 9354},\n                        {\"name\": \"HeapNode\", \"size\": 1233}\n                    ]\n                },\n                {\"name\": \"IEvaluable\", \"size\": 335},\n                {\"name\": \"IPredicate\", \"size\": 383},\n                {\"name\": \"IValueProxy\", \"size\": 874},\n                {\n                    \"name\": \"math\",\n                    \"children\": [\n                        {\"name\": \"DenseMatrix\", \"size\": 3165},\n                        {\"name\": \"IMatrix\", \"size\": 2815},\n                        {\"name\": \"SparseMatrix\", \"size\": 3366}\n                    ]\n                },\n                {\"name\": \"Maths\", \"size\": 17705},\n                {\"name\": \"Orientation\", \"size\": 1486},\n                {\n                    \"name\": \"palette\",\n                    \"children\": [\n                        {\"name\": \"ColorPalette\", \"size\": 6367},\n                        {\"name\": \"Palette\", \"size\": 1229},\n                        {\"name\": \"ShapePalette\", \"size\": 2059},\n                        {\"name\": \"SizePalette\", \"size\": 2291}\n                    ]\n                },\n                {\"name\": \"Property\", \"size\": 5559},\n                {\"name\": \"Shapes\", \"size\": 19118},\n                {\"name\": \"Sort\", \"size\": 6887},\n                {\"name\": \"Stats\", \"size\": 6557},\n                {\"name\": \"Strings\", \"size\": 22026}\n            ]\n        },\n        {\n            \"name\": \"vis\",\n            \"children\": [\n                {\n                    \"name\": \"axis\",\n                    \"children\": [\n                        {\"name\": \"Axes\", \"size\": 1302},\n                        {\"name\": \"Axis\", \"size\": 24593},\n                        {\"name\": \"AxisGridLine\", \"size\": 652},\n                        {\"name\": \"AxisLabel\", \"size\": 636},\n                        {\"name\": \"CartesianAxes\", \"size\": 6703}\n                    ]\n                },\n                {\n                    \"name\": \"controls\",\n                    \"children\": [\n                        {\"name\": \"AnchorControl\", \"size\": 2138},\n                        {\"name\": \"ClickControl\", \"size\": 3824},\n                        {\"name\": \"Control\", \"size\": 1353},\n                        {\"name\": \"ControlList\", \"size\": 4665},\n                        {\"name\": \"DragControl\", \"size\": 2649},\n                        {\"name\": \"ExpandControl\", \"size\": 2832},\n                        {\"name\": \"HoverControl\", \"size\": 4896},\n                        {\"name\": \"IControl\", \"size\": 763},\n                        {\"name\": \"PanZoomControl\", \"size\": 5222},\n                        {\"name\": \"SelectionControl\", \"size\": 7862},\n                        {\"name\": \"TooltipControl\", \"size\": 8435}\n                    ]\n                },\n                {\n                    \"name\": \"data\",\n                    \"children\": [\n                        {\"name\": \"Data\", \"size\": 20544},\n                        {\"name\": \"DataList\", \"size\": 19788},\n                        {\"name\": \"DataSprite\", \"size\": 10349},\n                        {\"name\": \"EdgeSprite\", \"size\": 3301},\n                        {\"name\": \"NodeSprite\", \"size\": 19382},\n                        {\n                            \"name\": \"render\",\n                            \"children\": [\n                                {\"name\": \"ArrowType\", \"size\": 698},\n                                {\"name\": \"EdgeRenderer\", \"size\": 5569},\n                                {\"name\": \"IRenderer\", \"size\": 353},\n                                {\"name\": \"ShapeRenderer\", \"size\": 2247}\n                            ]\n                        },\n                        {\"name\": \"ScaleBinding\", \"size\": 11275},\n                        {\"name\": \"Tree\", \"size\": 7147},\n                        {\"name\": \"TreeBuilder\", \"size\": 9930}\n                    ]\n                },\n                {\n                    \"name\": \"events\",\n                    \"children\": [\n                        {\"name\": \"DataEvent\", \"size\": 2313},\n                        {\"name\": \"SelectionEvent\", \"size\": 1880},\n                        {\"name\": \"TooltipEvent\", \"size\": 1701},\n                        {\"name\": \"VisualizationEvent\", \"size\": 1117}\n                    ]\n                },\n                {\n                    \"name\": \"legend\",\n                    \"children\": [\n                        {\"name\": \"Legend\", \"size\": 20859},\n                        {\"name\": \"LegendItem\", \"size\": 4614},\n                        {\"name\": \"LegendRange\", \"size\": 10530}\n                    ]\n                },\n                {\n                    \"name\": \"operator\",\n                    \"children\": [\n                        {\n                            \"name\": \"distortion\",\n                            \"children\": [\n                                {\"name\": \"BifocalDistortion\", \"size\": 4461},\n                                {\"name\": \"Distortion\", \"size\": 6314},\n                                {\"name\": \"FisheyeDistortion\", \"size\": 3444}\n                            ]\n                        },\n                        {\n                            \"name\": \"encoder\",\n                            \"children\": [\n                                {\"name\": \"ColorEncoder\", \"size\": 3179},\n                                {\"name\": \"Encoder\", \"size\": 4060},\n                                {\"name\": \"PropertyEncoder\", \"size\": 4138},\n                                {\"name\": \"ShapeEncoder\", \"size\": 1690},\n                                {\"name\": \"SizeEncoder\", \"size\": 1830}\n                            ]\n                        },\n                        {\n                            \"name\": \"filter\",\n                            \"children\": [\n                                {\"name\": \"FisheyeTreeFilter\", \"size\": 5219},\n                                {\"name\": \"GraphDistanceFilter\", \"size\": 3165},\n                                {\"name\": \"VisibilityFilter\", \"size\": 3509}\n                            ]\n                        },\n                        {\"name\": \"IOperator\", \"size\": 1286},\n                        {\n                            \"name\": \"label\",\n                            \"children\": [\n                                {\"name\": \"Labeler\", \"size\": 9956},\n                                {\"name\": \"RadialLabeler\", \"size\": 3899},\n                                {\"name\": \"StackedAreaLabeler\", \"size\": 3202}\n                            ]\n                        },\n                        {\n                            \"name\": \"layout\",\n                            \"children\": [\n                                {\"name\": \"AxisLayout\", \"size\": 6725},\n                                {\"name\": \"BundledEdgeRouter\", \"size\": 3727},\n                                {\"name\": \"CircleLayout\", \"size\": 9317},\n                                {\"name\": \"CirclePackingLayout\", \"size\": 12003},\n                                {\"name\": \"DendrogramLayout\", \"size\": 4853},\n                                {\"name\": \"ForceDirectedLayout\", \"size\": 8411},\n                                {\"name\": \"IcicleTreeLayout\", \"size\": 4864},\n                                {\"name\": \"IndentedTreeLayout\", \"size\": 3174},\n                                {\"name\": \"Layout\", \"size\": 7881},\n                                {\"name\": \"NodeLinkTreeLayout\", \"size\": 12870},\n                                {\"name\": \"PieLayout\", \"size\": 2728},\n                                {\"name\": \"RadialTreeLayout\", \"size\": 12348},\n                                {\"name\": \"RandomLayout\", \"size\": 870},\n                                {\"name\": \"StackedAreaLayout\", \"size\": 9121},\n                                {\"name\": \"TreeMapLayout\", \"size\": 9191}\n                            ]\n                        },\n                        {\"name\": \"Operator\", \"size\": 2490},\n                        {\"name\": \"OperatorList\", \"size\": 5248},\n                        {\"name\": \"OperatorSequence\", \"size\": 4190},\n                        {\"name\": \"OperatorSwitch\", \"size\": 2581},\n                        {\"name\": \"SortOperator\", \"size\": 2023}\n                    ]\n                },\n                {\"name\": \"Visualization\", \"size\": 16540}\n            ]\n        }\n    ]\n}]","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","editorHide":true,"title":true,"results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170313-192849_106839373","result":{"code":"SUCCESS","type":"TEXT","msg":""},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:489"},{"text":"%pyspark\n#!zeppelin2md:images/sunBurstChart-050.png\n\nsb = nv.sunBurstChart()\n\nconfig = {\"height\":800}\nsb.plot({\"data\":data, \"config\":config})\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170313-192847_1448520572","result":{"code":"SUCCESS","type":"HTML","msg":"<div style=\"height:800px; width:1024px\">\n\n            <div id=\"sunBurstChart-158\" class=\"with-3d-shadow with-transitions\" style=\"float:left; height:800px; width:1024px\">\n                <svg></svg>\n            </div>\n            \n</div>\n"},"dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:490"},{"text":"%pyspark\n\n\nl1.saveAsPng(chart=0)\n","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python","editOnDblClick":false},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170317-221637_1438524504","dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:491"},{"text":"%pyspark\nnv.reloadNVD3(\"1.8.5\")","dateUpdated":"2017-03-27T12:39:34+0000","config":{"editorSetting":{"language":"python"},"colWidth":12,"editorMode":"ace/mode/python","results":{},"enabled":true,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}}},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170319-205648_268716437","dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:492"},{"dateUpdated":"2017-03-27T12:39:34+0000","config":{"colWidth":12,"graph":{"mode":"table","height":300,"optionOpen":false,"keys":[],"values":[],"groups":[],"scatter":{}},"enabled":true,"editorMode":"ace/mode/scala"},"settings":{"params":{},"forms":{}},"jobName":"paragraph_1490618374574_1220231085","id":"20170320-155718_1902289560","dateCreated":"2017-03-27T12:39:34+0000","status":"READY","errorMessage":"","progressUpdateIntervalMs":500,"$$hashKey":"object:493"}],"name":"Zeppelin-Nvd3-Demo","id":"2CE441SDB","angularObjects":{"2C27DN6PF:shared_process":[],"2C49UH56G:shared_process":[],"2C3ST4TYA:shared_process":[],"2C32ZU7YM:shared_process":[],"2C2E1VYCK:shared_process":[],"2C2V2GJUA:shared_process":[]},"config":{"looknfeel":"default"},"info":{}}